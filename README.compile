
HP "Assembly" build instructions:
--------------------------------

KEGS is easy to compile.  Just cd to the src directory and type "make".
KEGS requires perl installed in /usr/local/bin/perl (or just edit the
scripts to point to wherever you installed perl).  Perl version 4 or 5 is
fine.

After the "make" has finished, it will create three executables:  kegs,
partls, and to_pro.  Just move them to where you want to put executables,
which is usually in the previous directory level.

If you get an error like 'as not found', make sure /usr/ccs/bin is in
your $PATH.

I build KEGS using a complex build process, so the provided Makefile
is not what I use to build KEGS, and so lacks the usual makefile niceties.
Sorry.  It does get the job done, though.

If you compile on pre-10.X versions of HP-UX, you may have to edit
the engine_s.s file to delete the line ".level 1.1".  I'll see if I can
make this more seamless in the future.

HP "C" build instructions:
-------------------------

If you want to try the C version of KEGS (about a factor of two slower),
you need to use the Makefile_c:

mv Makefile_c Makefile

And then type make.

This makefile uses gcc and compiles in about 2-3 minutes.  It takes over
2 hours and 650MB to compile with HP's C compiler.  I'm working on
getting this fixed.


X86 Linux build instructions:
----------------------------

Use the Makefile_x86linux makefile by:

mv Makefile_x86linux Makefile

and then:

make

KEGS assumes perl is in /usr/local/bin/perl.  If it is somewhere else, you
need to edit the first line of make_inst and make_size to point to the
correct place.

Audio is currently disabled by using the sound_dummy.c file in
place of code to really use /dev/audio on Linux.  I've started modifying
sound_hp.c (it will be renamed soon) to add Linux support--just
list sound_hp.c instead of sound_dummy.c in the Makefile, and
run kegs -audio 1.  It sounds horrible to me, but sounds do come out.

PowerPC Linux build instructions:
----------------------------

Use the Makefile_linuxppc makefile by:

mv Makefile_linuxppc Makefile

and then:

make

KEGS assumes perl is in /usr/local/bin/perl.  If it is somewhere else, you
need to edit the first line of make_inst and make_size to point to the
correct place.  Or add a symbolic link in /usr/local/bin/perl to
/usr/bin/perl.

Audio is currently disabled by using the sound_dummy.c file in
place of code to really use /dev/audio on Linux.  You can try sound_hp.c
(see x86 Linux instructions) but it sounds pretty bad.


Other platform "C" build instructions:
-------------------------------------

I don't know--you tell me.  If you are porting to an X-windows and
Unix-based machine, it should be easy.  Start with Makefile_x86linux if
you are a little-endian machine, or Makefile_linuxppc if you are big
endian.  Don't define -DKEGS_LITTLE_ENDIAN unless your processor is
little-endian (x86, Alpha).  Sun, MIPS, HP, Motorola, and IBM are
big-endian.

If you want to port to a non-X-Windows environment, you'll need to
rewrite xdriver.c and sound_hp.c/sound_dummy.c.  You'll probably have
to make changes to scc.c (BSD sockets) and smartport.c (Unix file
handling).  clock.c assumes gettimeofday() is accurate and fast, and
also uses select() for a microsecond sleep operation.

A user tells me KEGS compiles and runs under OS/2 (with modifications
that I put into v0.38) but that he had to create a new makefile.
When I get that makefile, it will be in the next KEGS release.

